<?xml version="1.0" ?>

<project name="SysCP" default="usage" basedir="../..">
	
	<includepath classpath="lib/classes/Creole/"/>
	
	<target name="usage">
	</target>
	
	<target name="cron">
		<exec command="${env.PHP_COMMAND} -c ${project.basedir}/etc/php-cli.ini ${project.basedir}/lib/cronscript.php" passthru="true"/>
	</target>
	<target name="configure">
		<property file="etc/syscp.conf" />
		<echo message=""/>
		<echo message="Welcome to the SysCP configuration"/>
		<echo message="" />
	    <echo message="Some questions needed to be answered before you can install"/>
	    <echo message="SysCP" />
	    <echo message="" />
	    <echo message="Database Connection Parameters"/>
		<input propertyname="mysql.hostname"      promptChar="?" defaultValue="localhost" >  MySQL Hostname ........</input>
		<input propertyname="mysql.database"      promptChar="?" defaultValue="syscp" >  MySQL Databasename ........</input>
		<input propertyname="mysql.username"      promptChar="?" defaultValue="syscp" >  MySQL unprivileged Username</input>
	    <input propertyname="mysql.password"      promptChar="?" defaultValue="" >  MySQL unprivileged Password ....</input>
	    <if>
	      <equals arg1="${conf.mysql.password}" arg2=""/>       
	      <then>
	        <echo message="YOU MUST SPECIFY A USER PASSWORD!"/>
	        <fail message="You must specify a user password!"/>
	      </then>
	    </if>
	    <input propertyname="mysql.root.username" promptChar="?" defaultValue="root" >  MySQL Root Username ........</input>
	    <input propertyname="mysql.root.password" promptChar="?" defaultValue="" >  MySQL Root Password ............</input>
	    <if>
	      <equals arg1="${mysql.root.password}" arg2=""/>       
	      <then>
	        <echo message="YOU MUST SPECIFY A ROOT PASSWORD!"/>
	        <fail message="You must specify a root password!"/>
	      </then>
	    </if>
	    <echo message=""/>
	    <echo message="Administrator Account:"/>
	    <input propertyname="admin.username"      promptChar="?" defaultValue="admin" >  Administrator Username ....</input>
	    <input propertyname="temp_pass1"          promptChar="?" defaultValue="" >  Administrator Password .........</input>
	    <if>
	      <equals arg1="${temp_pass1}" arg2=""/>       
	      <then>
	        <echo message="YOU MUST SPECIFY AN ADMINISTRATOR PASSWORD!"/>
	        <fail message="You must specify an administrator password!"/>
	      </then>
	    </if>
	    <echo message="  Please confirm the administrator password."/>
	    <input propertyname="temp_pass2"          promptChar="?" defaultValue="" >  Administrator Password .........</input>
	    <if>
	      <not>
	        <equals arg1="${temp_pass1}" arg2="${temp_pass2}"/>
	      </not>
	      <then>
	        <echo message="THE PASSWORDS DO NOT MATCH!"/>
	        <fail message="The passwords do not match!"/>
	      </then>
	    </if>
	    <php function="md5" returnProperty="admin.password">
	      <param value="${temp_pass1}"/>
	    </php>
	    <echo message=""/>
	    <echo message="Serversettings:"/>
	    <input propertyname="server.name"         promptChar="?" defaultValue="" >  Servername (FQDN) ..............</input>
	    <if>
	      <equals arg1="${system.server.name}" arg2=""/>       
	      <then>
	        <echo message="YOU MUST SPECIFY A FULL-QUALIFIED-DOMAIN-NAME FOR THIS SERVER!"/>
	        <fail message="You must specify a full-qualified-domain-name for this server!"/>
	      </then>
	    </if>
	    <input propertyname="server.ip"           promptChar="?" defaultValue="" >  Server-IP ......................</input>
	    <if>
	      <equals arg1="${system.server.ip}" arg2=""/>       
	      <then>
	        <echo message="YOU MUST SPECIFY A VALID IP-ADRESS FOR THIS SERVER!"/>
	        <fail message="You must specify a valid ip-adress for this server!"/>
	      </then>
	    </if>
	    <echo message=""/>
	    <echo message="Your informations has been stored, i will write the new"/>
		<echo message="syscp.conf now. "/>
	    <echo message=""/>
		<available file="etc/syscp.conf" property="CLEANUP" value="CLEANUP" />
		<if>
			<equals arg1="${CLEANUP}" arg2="CLEANUP" />
			<then>
				<chmod file="etc/syscp.conf" mode="660"/>
				<delete file="etc/syscp.conf" />
			</then>
		</if>
		<copy file="lib/build/src/syscp.conf" tofile="etc/syscp.conf">
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="_MYSQL_HOSTNAME_"       value="${mysql.hostname}" />
					<token key="_MYSQL_DATABASE_"       value="${mysql.database}" />
					<token key="_MYSQL_USERNAME_"       value="${mysql.username}" />
					<token key="_MYSQL_PASSWORD_"       value="${mysql.password}" />
					<token key="_MYSQL_ROOT_USERNAME_"  value="${mysql.root.username}" />
					<token key="_MYSQL_ROOT_PASSWORD_"  value="${mysql.root.password}" />
					<token key="_PANEL_ADMIN_USERNAME_" value="${admin.username}" />
					<token key="_PANEL_ADMIN_PASSWORD_" value="${admin.password}" />
					<token key="_SYSTEM_SERVER_NAME_"   value="${server.name}" />
					<token key="_SYSTEM_SERVER_IP_"     value="${server.ip}" />
				</replacetokens>
			</filterchain>
		</copy>
		<chmod file="etc/syscp.conf" mode="440"/>
	</target>
	<target name="install">
		<property file="etc/syscp.conf"/> <!-- Load the configure data -->
		<sql url="mysql://${conf.mysql.root.username}:${conf.mysql.root.password}@${conf.mysql.hostname}/">
			DELETE FROM `mysql`.`user` WHERE `User` = '${conf.mysql.username}' AND `Host` = '${conf.mysql.hostname}';
			DELETE FROM `mysql`.`db` WHERE `User` = '${conf.mysql.username}' AND `Host` = '${conf.mysql.hostname}';
			DELETE FROM `mysql`.`tables_priv` WHERE `User` = '${conf.mysql.username}' AND `Host` = '${conf.mysql.hostname}';
			DELETE FROM `mysql`.`columns_priv` WHERE `User` = '${conf.mysql.username}' AND `Host` = '${conf.mysql.hostname}';
			FLUSH PRIVILEGES;
			DROP DATABASE IF EXISTS `${conf.mysql.database}`;
			CREATE DATABASE `${conf.mysql.database}`;
			GRANT ALL PRIVILEGES ON `${conf.mysql.database}`.* TO ${conf.mysql.username}@${conf.mysql.hostname} IDENTIFIED BY 'password';
			SET PASSWORD FOR ${conf.mysql.username}@${conf.mysql.hostname} = PASSWORD('${conf.mysql.password}');
			FLUSH PRIVILEGES;
	    </sql> 
	    <sql url="mysql://${conf.mysql.username}:${conf.mysql.password}@${conf.mysql.hostname}/${conf.mysql.database}"
	         src="lib/build/src/syscp.sql" />
	    <sql url="mysql://${conf.mysql.username}:${conf.mysql.password}@${conf.mysql.hostname}/${conf.mysql.database}">
	        UPDATE `panel_settings` SET `value` = '${conf.admin.username}@${conf.server.name}' WHERE `settinggroup` = 'panel' AND `varname` = 'adminmail';
			UPDATE `panel_settings` SET `value` = '${conf.server.ip}' WHERE `settinggroup` = 'system' AND `varname` = 'ipaddress';
			UPDATE `panel_settings` SET `value` = '${conf.server.name}' WHERE `settinggroup` = 'system' AND `varname` = 'hostname';
			UPDATE `panel_settings` SET `value` = '${conf.mysql.hostname}' WHERE `settinggroup` = 'system' AND `varname` = 'mysql_access_host';
			UPDATE `panel_settings` SET `value` = UNIX_TIMESTAMP() WHERE `settinggroup` = 'system' AND `varname` = 'lastcronrun';
			INSERT INTO `panel_ipsandports` SET `ip` = '${conf.server.ip}', `port` = '80', `default` = '1';
			INSERT INTO `panel_admins` 
			   SET `loginname`             = '${conf.admin.username}',
			       `password`              = '${conf.admin.password}',
			       `name`                  = 'Siteadmin',
			       `email`                 = 'admin@${conf.server.name}',
			       `customers`             = -1,
			       `customers_used`        = 0, 
			       `customers_see_all`     = 1, 
			       `domains`               = -1, 
			       `domains_used`          = 0,
			       `domains_see_all`       = 1,
			       `change_serversettings` = 1,
			       `diskspace`             = -1024, 
			       `diskspace_used`        = 0, 
			       `mysqls`                = -1, 
			       `mysqls_used`           = 0, 
			       `emails`                = -1, 
			       `emails_used`           = 0, 
			       `email_accounts`        = -1, 
			       `email_accounts_used`   = 0, 
			       `email_forwarders`      = -1, 
			       `email_forwarders_used` = 0, 
			       `ftps`                  = -1, 
			       `ftps_used`             = 0,  
			       `subdomains`            = -1, 
			       `subdomains_used`       = 0, 
			       `traffic`               = -1048576, 
			       `traffic_used`          = 0, 
			       `deactivated`           = 0;
	    </sql>
	    <echo message=""/>
		<echo message="The SysCP basic setup has been done. Please visit the webpanel and "/>
		<echo message="change your system config files as described in the configuration  "/>
		<echo message="area of SysCP."/>
		<echo message=""/>
		<echo message="You can now type './syscp install-cli' to generate some symlinks in"/>
		<echo message="your filesystem for easier access to syscp bash functionality."/>
		<echo message=""/>
		<echo message="And you should really run 'syscp upgrade' to ensure you have all"/>
		<echo message="needed database upgrades installed."/>
	    <!--MAX ECHO ="###################################################################" -->
	</target>
	<target name="upgrade">
		<property file="etc/syscp.conf"/>
		<property file="etc/version.conf"/>
		<!-- Lets create a tmp dir we need for this -->
		<mkdir dir="lib/build/tmp"/>
		<!-- We need to find out the current database version -->
		<sql url="mysql://${conf.mysql.username}:${conf.mysql.password}@${conf.mysql.hostname}/${conf.mysql.database}" print="true" output="lib/build/tmp/installed.conf">  
			SELECT `varname`,`value` FROM `panel_settings` WHERE `settinggroup`='panel' AND `varname`='version';
		</sql>
		<reflexive file="lib/build/tmp/installed.conf">
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="^[a-zA-Z]" />
				</linecontainsregexp>
				<replaceregexp>
					<regexp pattern="," replace=" = "/>
				</replaceregexp>
				<prefixlines prefix="settings."/>
			</filterchain>
		</reflexive>
		<property file="lib/build/tmp/installed.conf"/>
		<echo message="Installed version: ${installed.version}"/>
		<echo message="Previous  version: ${settings.version}"/>
		<echo message="Doing upgrades if necessary!"/>
		<property value="0" name="do_upgrade"/>
		<!-- DEVELOPER INFO
		     As a developer, if you want to have database upgrade you must copy'n'paste the following
		     lines, and change the first line property value="..." to your new version. Versions are 
		     compared using php's version compare function. Please follow their versioning advices. 
		     And furthe you need to add a target with 'upgrade-[your-version]' which acutally does
		     all the needed changes.
		-->
		<property value="1.3.0-dev2" name="installed.version.new" override="true"/>
			<php function="version_compare" returnProperty="do_upgrade">
				<param value="${installed.version.new}"/>
				<param value="${settings.version}"/>
			</php>
			<if>
				<equals arg1="${do_upgrade}" arg2="1"/>
				<then>
					<phingcall target="upgrade-${installed.version.new}"/>
					<property value="${installed.version.new}" name="settings.version" override="true"/>
				</then>
			</if>
		<!-- DEVELOPER INFO
		     Copy'n'Paste upto here, for you own new entry 
		--> 
		<property value="1.3.0-dev3" name="installed.version.new" override="true"/>
			<php function="version_compare" returnProperty="do_upgrade">
				<param value="${installed.version.new}"/>
				<param value="${settings.version}"/>
			</php>
			<if>
				<equals arg1="${do_upgrade}" arg2="1"/>
				<then>
					<phingcall target="upgrade-${installed.version.new}"/>
					<property value="${installed.version.new}" name="settings.version" override="true"/>
				</then>
			</if>
		
		<!-- And now we need to update the database version string -->
		<sql url="mysql://${conf.mysql.username}:${conf.mysql.password}@${conf.mysql.hostname}/${conf.mysql.database}">
			UPDATE `panel_settings` SET `value`='${settings.version}' WHERE `settinggroup`='panel' AND `varname`='version';  
		</sql> 
		<delete dir="lib/build/tmp"/>
	</target>

	<!-- DEVELOPER INFO
	     You need to create a target like this to propagade your update 
	-->
	<target name="upgrade-1.3.0-dev2">
		<echo message="This is just an upgrade test, nothing has changed."/>
	</target>
	
	<target name="upgrade-1.3.0-dev3">
		<echo message="Updating panel_hooks data..."/>
		<sql url="mysql://${conf.mysql.username}:${conf.mysql.password}@${conf.mysql.hostname}/${conf.mysql.database}">
			UPDATE `panel_hooks` SET `file`='lib/classes/Syscp/Hooks/Apache.class.php',   `class`='Syscp_Hooks_Apache'   WHERE `class`='Org_Syscp_Core_Hooks_Apache';
			UPDATE `panel_hooks` SET `file`='lib/classes/Syscp/Hooks/Bind.class.php',     `class`='Syscp_Hooks_Bind'     WHERE `class`='Org_Syscp_Core_Hooks_Bind';
			UPDATE `panel_hooks` SET `file`='lib/classes/Syscp/Hooks/Customer.class.php', `class`='Syscp_Hooks_Customer' WHERE `class`='Org_Syscp_Core_Hooks_Customer';
			UPDATE `panel_hooks` SET `file`='lib/classes/Syscp/Hooks/Traffic.class.php',  `class`='Syscp_Hooks_Traffic'  WHERE `class`='Org_Syscp_Core_Hooks_Traffic';
			UPDATE `panel_tasks` SET `file`='lib/classes/Syscp/Hooks/Apache.class.php',   `class`='Syscp_Hooks_Apache'   WHERE `class`='Org_Syscp_Core_Hooks_Apache';
			UPDATE `panel_tasks` SET `file`='lib/classes/Syscp/Hooks/Bind.class.php',     `class`='Syscp_Hooks_Bind'     WHERE `class`='Org_Syscp_Core_Hooks_Bind';
			UPDATE `panel_tasks` SET `file`='lib/classes/Syscp/Hooks/Customer.class.php', `class`='Syscp_Hooks_Customer' WHERE `class`='Org_Syscp_Core_Hooks_Customer';
			UPDATE `panel_tasks` SET `file`='lib/classes/Syscp/Hooks/Traffic.class.php',  `class`='Syscp_Hooks_Traffic'  WHERE `class`='Org_Syscp_Core_Hooks_Traffic';
		</sql> 
	</target>
</project>